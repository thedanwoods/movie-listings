{"version":3,"sources":["reducers/initialState.js","reducers/moviesReducer.js","reducers/genresReducer.js","reducers/genreFilterReducer.js","reducers/ratingFilterReducer.js","reducers/fetchStatusReducer.js","reducers/index.js","utils/createStore.js","components/MovieCard/component.jsx","components/MovieCard/index.jsx","components/Movies/component.jsx","utils/arrayContainsArray.js","utils/getVisibleMovies.js","components/Movies/index.jsx","components/GenreFilterItem/component.jsx","components/GenreFilterItem/index.jsx","actions/checkboxClicked.js","components/GenreFilter/component.jsx","components/GenreFilter/index.jsx","components/RatingFilter/component.jsx","components/RatingFilter/index.jsx","actions/ratingClicked.js","components/Layout/component.jsx","actions/getMovies.js","components/Layout/index.jsx","App.jsx","index.jsx"],"names":["initialState","movies","genres","genreFilter","ratingFilter","fetchStatus","fetchMovies","moviesReducer","state","arguments","length","undefined","action","type","newIds","results","map","movie","id","Object","toConsumableArray","filter","includes","concat","genresReducer","genreFilterReducer","item","rating","fetchStatusReducer","objectSpread","combineReducers","createStore","reduxCreateStore","rootReducer","applyMiddleware","thunk","MovieCard","_ref","react_default","a","createElement","className","src","poster_path","alt","title","join","connect","ownProps","genre","genre_ids","name","byPopularityDescending","b","popularity","Movies","Fragment","sort","components_MovieCard","key","arrayContainsArray","superset","subset","every","value","getVisibleMovies","vote_average","GenreFilterItem","onClick","checked","htmlFor","onChange","dispatch","GenreFilter","components_GenreFilterItem","visibleGenres","reduce","acc","cur","sequence","Array","from","keys","el","RatingFilter","current","e","target","n","Math","floor","ratingClicked","Layout","loadStatus","getMovies","useEffect","components_GenreFilter","components_RatingFilter","components_Movies","dist_default","color","apiKey","url","fetch","then","asyncToGenerator","regenerator_default","mark","_callee","response","json","wrap","_context","prev","next","sent","abrupt","stop","this","_x","apply","fetchGenres","_ref2","_callee2","_context2","_x2","_ref3","_callee3","_context3","Promise","all","catch","_x3","store","App","es","components_Layout","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0fb20fcf.chunk.js","sourcesContent":["const initialState = {\n  movies: [],\n  genres: [],\n  genreFilter: [],\n  ratingFilter: 3,\n  fetchStatus: { fetchMovies: '' },\n};\n\nexport default initialState;\n","import initialState from './initialState';\n\nconst moviesReducer = (state = initialState.movies, action = {}) => {\n  switch (action.type) {\n    case 'MOVIES_RECEIVED': {\n      // If a movie is already in state, we replace it with the movie received\n      const newIds = action.movies.results.map(movie => movie.id);\n      return [\n        ...state.filter(movie => !newIds.includes(movie.id)),\n        ...action.movies.results,\n      ];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default moviesReducer;\n","import initialState from './initialState';\n\nconst genresReducer = (state = initialState.genres, action = {}) => {\n  switch (action.type) {\n    case 'GENRES_RECEIVED': {\n      return action.genres.genres;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default genresReducer;\n","import initialState from './initialState';\n\nconst genreFilterReducer = (state = initialState.genreFilter, action = {}) => {\n  switch (action.type) {\n    case 'CHECKBOX_CLICKED': {\n      let newState;\n      if (state.includes(action.id)) {\n        newState = state.filter(item => item !== action.id);\n      } else {\n        newState = [...state, action.id];\n      }\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default genreFilterReducer;\n","import initialState from './initialState';\n\nconst genreFilterReducer = (state = initialState.ratingFilter, action = {}) => {\n  switch (action.type) {\n    case 'RATING_CLICKED': {\n      return +action.rating;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default genreFilterReducer;\n","import initialState from './initialState';\n\nconst fetchStatusReducer = (state = initialState.fetchStatus, action = {}) => {\n  switch (action.type) {\n    case 'FETCH_MOVIES_START':\n      return {\n        ...state,\n        fetchMovies: 'LOADING',\n      };\n    case 'FETCH_MOVIES_ERROR':\n      return {\n        ...state,\n        fetchMovies: 'ERROR',\n      };\n    case 'FETCH_MOVIES_SUCCESS':\n      return {\n        ...state,\n        fetchMovies: 'SUCCESS',\n      };\n    default:\n      return state;\n  }\n};\n\nexport default fetchStatusReducer;\n","import { combineReducers } from 'redux';\nimport movies from './moviesReducer';\nimport genres from './genresReducer';\nimport genreFilter from './genreFilterReducer';\nimport ratingFilter from './ratingFilterReducer';\nimport fetchStatus from './fetchStatusReducer';\n\nexport default combineReducers({\n  movies,\n  genres,\n  genreFilter,\n  ratingFilter,\n  fetchStatus,\n});\n","import { applyMiddleware, createStore as reduxCreateStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\nimport initialState from '../reducers/initialState';\n\nconst createStore = () =>\n  reduxCreateStore(rootReducer, initialState, applyMiddleware(thunk));\nexport default createStore;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './movie-card.scss';\n\nconst MovieCard = ({ movie, genres }) => (\n  <div className=\"movie-card\">\n    <div className=\"movie-card__poster-container\">\n      <img\n        className=\"movie-card__poster\"\n        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n        alt={`${movie.title} poster`}\n      />\n    </div>\n    <section className=\"movie-card__info\">\n      <h1 className=\"movie-card__title\">{movie.title}</h1>\n      <p className=\"movie-card__genres\">\n        {genres.length && genres.join(', ')}\n      </p>\n    </section>\n  </div>\n);\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n  genres: PropTypes.array.isRequired,\n};\n\nexport default MovieCard;\n","import { connect } from 'react-redux';\nimport MovieCard from './component';\n\nexport const mapStateToProps = (state, ownProps) => ({\n  genres: state.genres\n    .filter(genre => ownProps.movie.genre_ids.includes(genre.id))\n    .map(genre => genre.name),\n});\n\nexport default connect(mapStateToProps)(MovieCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieCard from '../MovieCard';\n\nimport './movies.scss';\n\nconst byPopularityDescending = (a, b) => b.popularity - a.popularity;\n\nconst Movies = ({ movies }) => (\n  <>\n    {movies.length > 0 &&\n      movies\n        .sort(byPopularityDescending)\n        .map(movie => <MovieCard key={movie.id} movie={movie} />)}\n    {movies.length === 0 && (\n      <div className=\"movies__none\">\n        No matching movies found.\n      </div>\n    )}\n  </>\n);\n\nMovies.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default Movies;\n","// Returns true if all values in subset are in superset\nconst arrayContainsArray = (superset, subset) =>\n  !subset.length ? false : subset.every(value => superset.includes(value));\n\nexport default arrayContainsArray;","import arrayContainsArray from './arrayContainsArray';\n\nconst getVisibleMovies = (movies, genreFilter, ratingFilter) =>\n  !movies.length\n    ? []\n    : movies\n        .filter(\n          movie =>\n            // If no genre filter is applied, we return all genres rather than nothing\n            !genreFilter.length ||\n            arrayContainsArray(movie.genre_ids, genreFilter),\n        )\n        .filter(movie => movie.vote_average >= ratingFilter);\n\nexport default getVisibleMovies;\n","import { connect } from 'react-redux';\nimport Movies from './component';\nimport getVisibleMovies from '../../utils/getVisibleMovies';\n\nexport const mapStateToProps = state => ({\n  movies: getVisibleMovies(state.movies, state.genreFilter, state.ratingFilter),\n});\nexport default connect(mapStateToProps)(Movies);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './genre-filter-item.scss';\n\nconst GenreFilterItem = ({ genre, onClick, checked }) => (\n  <li className=\"genre-filter-item\">\n    <label\n      className=\"genre-filter-item__checkbox\"\n      htmlFor={`genre-filter-${genre.name}`}\n    >\n      <input\n        type=\"checkbox\"\n        id={`genre-filter-${genre.name}`}\n        name={genre.name}\n        onChange={onClick}\n        checked={checked}\n      />\n      <div className=\"genre-filter-item__text\">{genre.name}</div>\n    </label>\n  </li>\n);\n\nGenreFilterItem.propTypes = {\n  genre: PropTypes.object.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default GenreFilterItem;\n","import { connect } from 'react-redux';\nimport GenreFilterItem from './component';\nimport checkboxClicked from '../../actions/checkboxClicked';\n\nexport const mapStateToProps = (state, ownProps) => ({\n  checked: state.genreFilter.includes(ownProps.genre.id),\n});\n\nexport const mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => {\n    dispatch(checkboxClicked(ownProps.genre.id));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(GenreFilterItem);\n","export default id => ({\n  type: 'CHECKBOX_CLICKED',\n  id,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GenreFilterItem from '../GenreFilterItem';\n\nimport './genre-filter.scss';\n\nconst GenreFilter = ({ genres }) => (\n  <div className=\"genre-filter\">\n    <h2 className=\"genre-filter__heading\">Genres</h2>\n    <ul>\n      {genres &&\n        genres.map(genre => <GenreFilterItem key={genre.id} genre={genre} />)}\n    </ul>\n  </div>\n);\n\nGenreFilter.propTypes = {\n  genres: PropTypes.array.isRequired,\n};\n\nexport default GenreFilter;\n","import { connect } from 'react-redux';\nimport GenreFilter from './component';\nimport getVisibleMovies from '../../utils/getVisibleMovies';\n\n// Only show genres that are possible based on the current visible movies\nexport const mapStateToProps = state => {\n  const visibleMovies = getVisibleMovies(\n    state.movies,\n    state.genreFilter,\n    state.ratingFilter,\n  );\n  const visibleGenres = visibleMovies\n    .map(movie => movie.genre_ids)\n    .reduce((acc, cur) => [...acc, ...cur], []); // Flattens array\n  return {\n    genres: state.genres.filter(genre =>\n      visibleGenres.includes(genre.id),\n    ),\n  };\n};\n\nexport default connect(mapStateToProps)(GenreFilter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './rating-filter.scss';\n\n// Create sequence 0 to 10 in 0.5 intervals\nconst sequence = Array.from(new Array(21).keys()).map(el => el / 2);\n\nconst displayRatingNumber = n =>\n  `${n !== 0.5 ? Math.floor(n) : ''}${n === Math.floor(n) ? '' : '\\u00BD'}`;\n\nconst RatingFilter = ({ current, onChange }) => (\n  <div className=\"rating-filter\">\n    <h2 className=\"rating-filter__heading\">Minimum rating</h2>\n    <select\n      id=\"rating-filter-dropdown\"\n      className=\"rating-filter__select\"\n      value={current}\n      name=\"rating\"\n      onChange={e => onChange(e.target.value)}\n    >\n      {sequence.map(rating => (\n        <option className=\"rating-filter__option\" key={rating} value={rating}>\n          {displayRatingNumber(rating)}\n        </option>\n      ))}\n    </select>\n  </div>\n);\n\nRatingFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  current: PropTypes.number.isRequired,\n};\n\nexport default RatingFilter;\n","import { connect } from 'react-redux';\nimport RatingFilter from './component';\nimport ratingClicked from '../../actions/ratingClicked';\n\nexport const mapStateToProps = state => ({ current: state.ratingFilter });\n\nexport const mapDispatchToProps = dispatch => ({\n  onChange: rating => {\n    dispatch(ratingClicked(rating));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(RatingFilter);\n","export default rating => ({\n  type: 'RATING_CLICKED',\n  rating,\n});\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from 'react-spinkit';\nimport Movies from '../Movies';\nimport GenreFilter from '../GenreFilter';\nimport RatingFilter from '../RatingFilter';\n\nimport './layout.scss';\n\nconst Layout = ({ loadStatus, getMovies }) => {\n  useEffect(() => {\n    // Fetch movies on component mount if never loaded\n    if (!loadStatus) getMovies();\n  }, []);\n\n  return (\n    <div className=\"layout\">\n      {loadStatus === 'SUCCESS' && (\n        <>\n          <div className=\"layout__sidebar\">\n            <div className=\"layout__sidebar-inner\">\n              <GenreFilter />\n              <RatingFilter />\n            </div>\n          </div>\n          <Movies />\n        </>\n      )}\n      {loadStatus === 'ERROR' && (\n        <div className=\"layout__error\">\n          Sorry, we couldn&apos;t retrieve the movie data. Please reload the\n          page or check your connection.\n        </div>\n      )}\n      {loadStatus === 'LOADING' && (\n        <div className=\"layout--loading\">\n          <Spinner name=\"ball-beat\" color=\"#bbb\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  loadStatus: PropTypes.string.isRequired,\n  getMovies: PropTypes.func.isRequired,\n};\n\nexport default Layout;\n","/* global fetch */\n// TODO In the real world we wouldn't hard code this\nconst apiKey = 'f94a91209b8b99b37d7b9e3780b888fd';\n\nconst fetchMovies = () => {\n  const url = `https://api.themoviedb.org/3/movie/now_playing?api_key=${apiKey}`;\n  return fetch(url).then(async response => {\n    const json = await response.json();\n    return json;\n  });\n};\n\nconst fetchGenres = () => {\n  const url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}`;\n  return fetch(url).then(async response => {\n    const json = await response.json();\n    return json;\n  });\n};\n\nconst getMovies = () => async dispatch => {\n  dispatch({ type: 'FETCH_MOVIES_START' });\n  Promise.all([\n    fetchMovies().then(movies => dispatch({ type: 'MOVIES_RECEIVED', movies })),\n    fetchGenres().then(genres => dispatch({ type: 'GENRES_RECEIVED', genres })),\n  ])\n    .then(() => {\n      dispatch({ type: 'FETCH_MOVIES_SUCCESS' });\n    })\n    .catch(() => {\n      dispatch({ type: 'FETCH_MOVIES_ERROR' });\n    });\n};\n\nexport default getMovies;\n","import { connect } from 'react-redux';\nimport Layout from './component';\nimport getMovies from '../../actions/getMovies';\n\nexport const mapStateToProps = state => ({\n  loadStatus: state.fetchStatus.fetchMovies,\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getMovies: () => {\n    dispatch(getMovies());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport createStore from './utils/createStore';\nimport Layout from './components/Layout';\nimport './App.css';\n\nconst store = createStore();\n\nconst App = () => (\n  <Provider store={store}>\n    <Layout />\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n/* global document */\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}